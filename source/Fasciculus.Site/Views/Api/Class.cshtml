@model ApiClassViewModel
@{
    bool hasFields = Model.Class.Fields.Any();
    bool hasEvents = Model.Class.Events.Any();
    bool hasProperties = Model.Class.Properties.Any();

    bool hasConstructors = Model.Class.Constructors.Any();
}

<h1>@Model.Class.Name Class</h1>

<h2>In this article</h2>

<ul>
    <li><a href="#definition">Definition</a></li>
    @if (hasFields)
    {
        <li><a href="#fields">Fields</a></li>
    }
    @if (hasEvents)
    {
        <li><a href="#events">Events</a></li>
    }
    @if (hasProperties)
    {
        <li><a href="#properties">Properties</a></li>
    }
    @if (hasConstructors)
    {
        <li><a href="#constructors">Constructors</a></li>
    }
    <li><a href="#applies-to">Applies to</a></li>
</ul>

<h2 id="definition">Definition</h2>

<partial name="_SymbolInfo.cshtml" model=Model />

<code>@Model.Class.Modifiers class @Model.Class.Name</code>

<p>@Html.Raw(@Model.Class.Comment.Summary)</p>

@if (hasFields)
{
    <partial name="_Fields.cshtml" model=Model.Class.Fields />
}

@if (hasEvents)
{
    <partial name="_Events.cshtml" model=Model.Class.Events />
}

@if (hasProperties)
{
    <partial name="_Properties.cshtml" model=Model.Class.Properties />
}

@if (hasConstructors)
{
    <partial name="_Constructors.cshtml" model=Model.Class.Constructors />
}

<partial name="_AppliesTo.cshtml" model=Model.AppliesTo />
